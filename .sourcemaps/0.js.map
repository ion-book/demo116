{"version":3,"sources":["../../src/pages/home/home.module.ts","../../src/pages/home/home.ts","../../src/validators/validators.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AAUlC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAR1B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uDAAQ;aACT;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;aACnC;SACF,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACZe;AACM;AACoB;AACP;AAO7D;IAYE,kBACU,SAA0B,EAC1B,EAAe;QADf,cAAS,GAAT,SAAS,CAAiB;QAC1B,OAAE,GAAF,EAAE,CAAa;QAEvB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,2BAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACzC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,iBAAiB;YACxB,QAAQ,EAAE,aAAa;YACvB,OAAO,EAAE,6CAA6C;YACtD,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE;QACf,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,iCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAGD,4BAAS,GAAT;QAAA,iBAyBC;QAxBC;;WAEG;QACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,EAAC,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,SAAS,EAAC,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,EAAC,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,kEAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACtF,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,EAAC,kEAAU,CAAC,KAAK,CAAC,CAAC;YAClD,aAAa,EAAC,CAAC,UAAU,EAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;YAChD,eAAe,EAAC,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,4EAAY,CAAC,cAAc,CAAC,CAAC;SACxE,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,eAAe,CAAC;aAC1C,YAAY;aACZ,SAAS,CAAC,eAAK;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;gBACzB,IAAM,UAAU,GAAG,CAAC,kEAAU,CAAC,QAAQ,EAAE,4EAAY,CAAC,cAAc,CAAC,CAAC;gBACtE,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC1E,CAAC;YAAA,IAAI,CAAC,CAAC;gBACL,IAAM,UAAU,GAAG,CAAC,kEAAU,CAAC,QAAQ,EAAE,4EAAY,CAAC,kBAAkB,CAAC,CAAC;gBAC1E,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC1E,CAAC;YACD,KAAI,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAjEU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iFAcoC;YACtB,KAAW;OAdd,QAAQ,CAmEpB;IAAD,CAAC;AAAA;SAnEY,QAAQ,e;;;;;;;;ACRrB;AAAA;IAAA;IAsBA,CAAC;IApBQ,2BAAc,GAArB,UAAsB,OAAoB;QACxC,IAAM,KAAK,GAAW,OAAO,CAAC,KAAK,CAAC;QACpC,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC;gBACL,WAAW,EAAE,IAAI;aAClB;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,+BAAkB,GAAzB,UAA0B,OAAoB;QAC5C,IAAM,KAAK,GAAW,OAAO,CAAC,KAAK,CAAC;QACpC,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC;gBACL,eAAe,EAAE,IAAI;aACtB;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEH,mBAAC;AAAD,CAAC","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HomePage } from './home';\n\n@NgModule({\n  declarations: [\n    HomePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(HomePage),\n  ],\n})\nexport class HomePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, AlertController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MyValidators } from './../../validators/validators';\n\n@IonicPage()\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n})\nexport class HomePage {\n\n  /**\n   * @param formularioUsuario Rastrea el valor y el estado de validez de un grupo de instancias de FormControl.\n   * Un FormGroup agrega los valores de cada FormControl hijo en un objeto, con cada nombre de control como la clave.\n   * Calcula su estatus reduciendo los estatus de sus hijos. Por ejemplo, si uno de los controles de un grupo no es\n   * v치lido, todo el grupo se convierte en no v치lido.\n   * FormGroup es uno de los tres bloques de construcci칩n fundamentales utilizados para definir formularios en Angular,\n   * junto con FormControl y FormArray.\n   */\n  formularioUsuario:FormGroup;\n\n  constructor(\n    private alertCtrl: AlertController,\n    private fb: FormBuilder\n  ) {\n    this.buildForm();\n  }\n\n  /**\n   * evento que se ejecuta al enviar la informacion, este solo cumple la funcion de mostrar un mensaje de informacion,\n   * resetea el formulario y sus validaciones y limpia el parametro datosUsuario para el nuevo ingreso de informacion.\n   */\n  saveData(){\n    console.log(this.formularioUsuario.value)\n    const alert = this.alertCtrl.create({\n      title: \"Datos enviados!\",\n      subTitle: \"Informaci칩n\",\n      message: \"Los registros fueron enviados correctamente\",\n      buttons: ['Ok']\n    });\n    alert.present()\n    this.buildForm();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad HomePage');\n  }\n\n\n  buildForm() {\n    /**\n     * @description Asignamos a la propiedad \"formularioUsuario\" los campos que se van a controlar de la vista\n     */\n    this.formularioUsuario = this.fb.group({\n      nombre:['',[Validators.required,Validators.maxLength(30)]],\n      direccion:['',[Validators.required,Validators.minLength(5),Validators.maxLength(100)]],\n      correo:['',[Validators.required,Validators.email]],\n      tipo_contacto:['Telefono',[Validators.required]],\n      numero_contacto:['',[Validators.required, MyValidators.checkPhoneSize]]\n    });\n\n    this.formularioUsuario.get('tipo_contacto')\n    .valueChanges\n    .subscribe(value => {\n      console.log(value);\n      if (value === 'Telefono') {\n        const validators = [Validators.required, MyValidators.checkPhoneSize];\n        this.formularioUsuario.get('numero_contacto').setValidators(validators);\n      }else {\n        const validators = [Validators.required, MyValidators.checkCellPhoneSize];\n        this.formularioUsuario.get('numero_contacto').setValidators(validators);\n      }\n      this.formularioUsuario.updateValueAndValidity();\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { FormControl } from \"@angular/forms\";\n\nexport class MyValidators{\n\n  static checkPhoneSize(control: FormControl) {\n    const value: string = control.value;\n    if (value && value.length >= 7) {\n      return {\n        'phoneSize': true\n      }\n    }\n    return null;\n  }\n\n  static checkCellPhoneSize(control: FormControl) {\n    const value: string = control.value;\n    if (value && value.length >= 7) {\n      return {\n        'cellPhoneSize': true\n      }\n    }\n    return null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/validators.ts"],"sourceRoot":""}